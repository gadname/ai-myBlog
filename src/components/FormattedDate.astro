---
interface Props {
	date: Date | string | number | undefined | null;
}

const { date } = Astro.props;

// 日付を安全にDateオブジェクトに変換
const safeDate = (() => {
	try {
		if (!date) return new Date();
		
		if (date instanceof Date) {
			return isNaN(date.getTime()) ? new Date() : date;
		}
		
		if (typeof date === 'string' || typeof date === 'number') {
			const parsedDate = new Date(date);
			return isNaN(parsedDate.getTime()) ? new Date() : parsedDate;
		}
		
		return new Date();
	} catch (error) {
		console.warn('FormattedDate: Error parsing date:', date, error);
		return new Date();
	}
})();

// さらなる安全性チェック
const isValidDate = safeDate instanceof Date && !isNaN(safeDate.getTime());
const finalDate = isValidDate ? safeDate : new Date();
---

<time datetime={finalDate.toISOString()}>
	{
		finalDate.toLocaleDateString('ja-JP', {
			year: 'numeric',
			month: 'long',
			day: 'numeric',
		})
	}
</time>
