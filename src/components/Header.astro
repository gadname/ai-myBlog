---
import { SITE_TITLE } from '../consts';
import HeaderLink from './HeaderLink.astro';
---

<header>
	<nav class="nav-container">
		<div class="nav-wrapper">
			<a href="/" class="logo">
				<span class="logo-text">DevFolio</span>
			</a>
			<div class="nav-links">
				<HeaderLink href="/">ホーム</HeaderLink>
				<HeaderLink href="/blog">ブログ</HeaderLink>
				<HeaderLink href="/about">アバウト</HeaderLink>
				<HeaderLink href="#contact">お問い合わせ</HeaderLink>
			</div>
			<button class="mobile-menu-toggle" aria-label="Toggle mobile menu">
				<span></span>
				<span></span>
			</button>
		</div>
	</nav>
</header>
<style>
	header {
		position: fixed;
		top: 0;
		left: 0;
		right: 0;
		z-index: 1000;
		background: rgba(255, 255, 255, 0.8);
		backdrop-filter: blur(10px);
		-webkit-backdrop-filter: blur(10px);
		transition: all var(--transition-base);
	}
	
	/* Add padding to body to account for fixed header */
	:global(body) {
		padding-top: 60px;
	}

	.nav-container {
		max-width: var(--max-width-7xl);
		margin: 0 auto;
		padding: 0 var(--space-xl);
	}

	.nav-wrapper {
		display: flex;
		align-items: center;
		justify-content: space-between;
		height: 60px;
	}

	.logo {
		text-decoration: none;
		transition: all var(--transition-base);
	}

	.logo-text {
		font-size: var(--font-size-xl);
		font-weight: 700;
		color: var(--text-primary);
		letter-spacing: -0.02em;
		transition: all var(--transition-base);
		position: relative;
	}
	
	.logo-text::after {
		content: '';
		position: absolute;
		bottom: -2px;
		left: 0;
		width: 0;
		height: 2px;
		background: var(--primary-gradient);
		transition: width var(--transition-base);
	}
	
	.logo:hover .logo-text {
		color: var(--primary);
	}
	
	.logo:hover .logo-text::after {
		width: 100%;
	}

	.nav-links {
		display: flex;
		gap: var(--space-2xl);
		align-items: center;
	}

	.mobile-menu-toggle {
		display: none;
		position: relative;
		width: 24px;
		height: 24px;
		background: none;
		border: none;
		cursor: pointer;
		padding: 0;
		z-index: 1001;
	}

	.mobile-menu-toggle span {
		position: absolute;
		left: 0;
		width: 24px;
		height: 2px;
		background-color: var(--text-primary);
		transition: all var(--transition-fast);
		border-radius: var(--radius-full);
	}
	
	.mobile-menu-toggle span:first-child {
		top: 8px;
	}
	
	.mobile-menu-toggle span:last-child {
		bottom: 8px;
	}
	
	.mobile-menu-toggle.active span:first-child {
		transform: rotate(45deg);
		top: 11px;
	}
	
	.mobile-menu-toggle.active span:last-child {
		transform: rotate(-45deg);
		bottom: 11px;
	}

	/* Elegant scroll effect */
	.scrolled {
		background: rgba(255, 255, 255, 0.95);
		box-shadow: 0 1px 0 rgba(var(--gray-200), 0.5);
	}

	@media (max-width: 768px) {
		.nav-container {
			padding: 0 var(--space-lg);
		}

		.nav-links {
			position: fixed;
			top: 60px;
			left: 0;
			right: 0;
			background: rgba(255, 255, 255, 0.98);
			backdrop-filter: blur(20px);
			-webkit-backdrop-filter: blur(20px);
			flex-direction: column;
			padding: var(--space-2xl);
			gap: var(--space-lg);
			transform: translateY(-120%);
			opacity: 0;
			transition: all var(--transition-base);
			box-shadow: 0 10px 30px rgba(0, 0, 0, 0.1);
		}

		.nav-links.active {
			transform: translateY(0);
			opacity: 1;
		}

		.mobile-menu-toggle {
			display: block;
		}
	}
</style>

<script>
	// Mobile menu toggle
	const toggle = document.querySelector('.mobile-menu-toggle');
	const navLinks = document.querySelector('.nav-links');
	const header = document.querySelector('header');
	
	if (toggle && navLinks) {
		toggle.addEventListener('click', () => {
			toggle.classList.toggle('active');
			navLinks.classList.toggle('active');
		});
		
		// Close menu when clicking outside
		document.addEventListener('click', (e) => {
			if (!toggle.contains(e.target) && !navLinks.contains(e.target)) {
				toggle.classList.remove('active');
				navLinks.classList.remove('active');
			}
		});
		
		// Close menu when clicking a nav link
		navLinks.querySelectorAll('a').forEach(link => {
			link.addEventListener('click', () => {
				toggle.classList.remove('active');
				navLinks.classList.remove('active');
			});
		});
	}
	
	// Scroll effect
	let lastScroll = 0;
	window.addEventListener('scroll', () => {
		const currentScroll = window.pageYOffset;
		
		if (currentScroll > 10) {
			header.classList.add('scrolled');
		} else {
			header.classList.remove('scrolled');
		}
		
		lastScroll = currentScroll;
	});
</script>